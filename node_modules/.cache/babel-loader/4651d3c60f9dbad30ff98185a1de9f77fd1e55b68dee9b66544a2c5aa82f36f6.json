{"ast":null,"code":"import _objectSpread from\"C:/Users/BHARGAVI/OneDrive/Desktop/New/client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{createContext,useState,useContext,useEffect}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext();export function useAuth(){return useContext(AuthContext);}export function AuthProvider(_ref){let{children}=_ref;const[user,setUser]=useState(null);const[loading,setLoading]=useState(true);const login=async(email,password)=>{try{// Your login logic here\nsetUser({email});// Set user data\nlocalStorage.setItem('user',JSON.stringify({email}));}catch(error){throw error;}};const logout=()=>{setUser(null);localStorage.removeItem('user');};const updateProfile=async updatedData=>{try{// Here you would typically make an API call to update the user data\nconst updatedUser=_objectSpread(_objectSpread({},user),updatedData);// Update local storage and state\nlocalStorage.setItem('user',JSON.stringify(updatedUser));setUser(updatedUser);return true;}catch(error){console.error('Failed to update profile:',error);throw error;}};useEffect(()=>{// Check for stored user data when the app loads\nconst storedUser=localStorage.getItem('user');if(storedUser){setUser(JSON.parse(storedUser));}setLoading(false);},[]);const value={user,login,logout,loading,updateProfile};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:value,children:!loading&&children});}","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","jsx","_jsx","AuthContext","useAuth","AuthProvider","_ref","children","user","setUser","loading","setLoading","login","email","password","localStorage","setItem","JSON","stringify","error","logout","removeItem","updateProfile","updatedData","updatedUser","_objectSpread","console","storedUser","getItem","parse","value","Provider"],"sources":["C:/Users/BHARGAVI/OneDrive/Desktop/New/client/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\n\nconst AuthContext = createContext();\n\nexport function useAuth() {\n  return useContext(AuthContext);\n}\n\nexport function AuthProvider({ children }) {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  const login = async (email, password) => {\n    try {\n      // Your login logic here\n      setUser({ email }); // Set user data\n      localStorage.setItem('user', JSON.stringify({ email }));\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  const logout = () => {\n    setUser(null);\n    localStorage.removeItem('user');\n  };\n\n  const updateProfile = async (updatedData) => {\n    try {\n      // Here you would typically make an API call to update the user data\n      const updatedUser = {\n        ...user,\n        ...updatedData,\n      };\n      \n      // Update local storage and state\n      localStorage.setItem('user', JSON.stringify(updatedUser));\n      setUser(updatedUser);\n      return true;\n    } catch (error) {\n      console.error('Failed to update profile:', error);\n      throw error;\n    }\n  };\n\n  useEffect(() => {\n    // Check for stored user data when the app loads\n    const storedUser = localStorage.getItem('user');\n    if (storedUser) {\n      setUser(JSON.parse(storedUser));\n    }\n    setLoading(false);\n  }, []);\n\n  const value = {\n    user,\n    login,\n    logout,\n    loading,\n    updateProfile\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {!loading && children}\n    </AuthContext.Provider>\n  );\n} "],"mappings":"kIAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,QAAQ,CAAEC,UAAU,CAAEC,SAAS,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE9E,KAAM,CAAAC,WAAW,cAAGN,aAAa,CAAC,CAAC,CAEnC,MAAO,SAAS,CAAAO,OAAOA,CAAA,CAAG,CACxB,MAAO,CAAAL,UAAU,CAACI,WAAW,CAAC,CAChC,CAEA,MAAO,SAAS,CAAAE,YAAYA,CAAAC,IAAA,CAAe,IAAd,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACvC,KAAM,CAACE,IAAI,CAAEC,OAAO,CAAC,CAAGX,QAAQ,CAAC,IAAI,CAAC,CACtC,KAAM,CAACY,OAAO,CAAEC,UAAU,CAAC,CAAGb,QAAQ,CAAC,IAAI,CAAC,CAE5C,KAAM,CAAAc,KAAK,CAAG,KAAAA,CAAOC,KAAK,CAAEC,QAAQ,GAAK,CACvC,GAAI,CACF;AACAL,OAAO,CAAC,CAAEI,KAAM,CAAC,CAAC,CAAE;AACpBE,YAAY,CAACC,OAAO,CAAC,MAAM,CAAEC,IAAI,CAACC,SAAS,CAAC,CAAEL,KAAM,CAAC,CAAC,CAAC,CACzD,CAAE,MAAOM,KAAK,CAAE,CACd,KAAM,CAAAA,KAAK,CACb,CACF,CAAC,CAED,KAAM,CAAAC,MAAM,CAAGA,CAAA,GAAM,CACnBX,OAAO,CAAC,IAAI,CAAC,CACbM,YAAY,CAACM,UAAU,CAAC,MAAM,CAAC,CACjC,CAAC,CAED,KAAM,CAAAC,aAAa,CAAG,KAAO,CAAAC,WAAW,EAAK,CAC3C,GAAI,CACF;AACA,KAAM,CAAAC,WAAW,CAAAC,aAAA,CAAAA,aAAA,IACZjB,IAAI,EACJe,WAAW,CACf,CAED;AACAR,YAAY,CAACC,OAAO,CAAC,MAAM,CAAEC,IAAI,CAACC,SAAS,CAACM,WAAW,CAAC,CAAC,CACzDf,OAAO,CAACe,WAAW,CAAC,CACpB,MAAO,KAAI,CACb,CAAE,MAAOL,KAAK,CAAE,CACdO,OAAO,CAACP,KAAK,CAAC,2BAA2B,CAAEA,KAAK,CAAC,CACjD,KAAM,CAAAA,KAAK,CACb,CACF,CAAC,CAEDnB,SAAS,CAAC,IAAM,CACd;AACA,KAAM,CAAA2B,UAAU,CAAGZ,YAAY,CAACa,OAAO,CAAC,MAAM,CAAC,CAC/C,GAAID,UAAU,CAAE,CACdlB,OAAO,CAACQ,IAAI,CAACY,KAAK,CAACF,UAAU,CAAC,CAAC,CACjC,CACAhB,UAAU,CAAC,KAAK,CAAC,CACnB,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAmB,KAAK,CAAG,CACZtB,IAAI,CACJI,KAAK,CACLQ,MAAM,CACNV,OAAO,CACPY,aACF,CAAC,CAED,mBACEpB,IAAA,CAACC,WAAW,CAAC4B,QAAQ,EAACD,KAAK,CAAEA,KAAM,CAAAvB,QAAA,CAChC,CAACG,OAAO,EAAIH,QAAQ,CACD,CAAC,CAE3B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}